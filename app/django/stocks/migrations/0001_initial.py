# Generated by Django 4.2.20 on 2025-04-26 15:49

from django.db import migrations, models
import psqlextra.backend.migrations.operations.add_default_partition
import psqlextra.backend.migrations.operations.create_partitioned_model
import psqlextra.manager.manager
import psqlextra.models.partitioned
import psqlextra.types
import stocks.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        psqlextra.backend.migrations.operations.create_partitioned_model.PostgresCreatePartitionedModel(
            name='DailyCandle',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('ticker', models.CharField(db_index=True, max_length=10)),
                ('timestamp', models.DateTimeField()),
                ('open', models.DecimalField(decimal_places=2, max_digits=8)),
                ('high', models.DecimalField(decimal_places=2, max_digits=8)),
                ('low', models.DecimalField(decimal_places=2, max_digits=8)),
                ('close', models.DecimalField(decimal_places=2, max_digits=8)),
                ('volume', models.BigIntegerField()),
            ],
            options={
                'verbose_name': 'Daily Candle',
                'verbose_name_plural': 'Daily Candles',
                'abstract': False,
            },
            partitioning_options={
                'method': psqlextra.types.PostgresPartitioningMethod['LIST'],
                'key': ['ticker'],
            },
            bases=(psqlextra.models.partitioned.PostgresPartitionedModel, stocks.models.CandleModelMixin),
            managers=[
                ('objects', psqlextra.manager.manager.PostgresManager()),
            ],
        ),
        psqlextra.backend.migrations.operations.add_default_partition.PostgresAddDefaultPartition(
            model_name='DailyCandle',
            name='default',
        ),
        psqlextra.backend.migrations.operations.create_partitioned_model.PostgresCreatePartitionedModel(
            name='FiveMinCandle',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('ticker', models.CharField(db_index=True, max_length=10)),
                ('timestamp', models.DateTimeField()),
                ('open', models.DecimalField(decimal_places=2, max_digits=8)),
                ('high', models.DecimalField(decimal_places=2, max_digits=8)),
                ('low', models.DecimalField(decimal_places=2, max_digits=8)),
                ('close', models.DecimalField(decimal_places=2, max_digits=8)),
                ('volume', models.BigIntegerField()),
            ],
            options={
                'verbose_name': '5-Minute Candle',
                'verbose_name_plural': '5-Minute Candles',
                'abstract': False,
            },
            partitioning_options={
                'method': psqlextra.types.PostgresPartitioningMethod['LIST'],
                'key': ['ticker'],
            },
            bases=(psqlextra.models.partitioned.PostgresPartitionedModel, stocks.models.CandleModelMixin),
            managers=[
                ('objects', psqlextra.manager.manager.PostgresManager()),
            ],
        ),
        psqlextra.backend.migrations.operations.add_default_partition.PostgresAddDefaultPartition(
            model_name='FiveMinCandle',
            name='default',
        ),
        psqlextra.backend.migrations.operations.create_partitioned_model.PostgresCreatePartitionedModel(
            name='HourCandle',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('ticker', models.CharField(db_index=True, max_length=10)),
                ('timestamp', models.DateTimeField()),
                ('open', models.DecimalField(decimal_places=2, max_digits=8)),
                ('high', models.DecimalField(decimal_places=2, max_digits=8)),
                ('low', models.DecimalField(decimal_places=2, max_digits=8)),
                ('close', models.DecimalField(decimal_places=2, max_digits=8)),
                ('volume', models.BigIntegerField()),
            ],
            options={
                'verbose_name': 'Hour Candle',
                'verbose_name_plural': 'Hour Candles',
                'abstract': False,
            },
            partitioning_options={
                'method': psqlextra.types.PostgresPartitioningMethod['LIST'],
                'key': ['ticker'],
            },
            bases=(psqlextra.models.partitioned.PostgresPartitionedModel, stocks.models.CandleModelMixin),
            managers=[
                ('objects', psqlextra.manager.manager.PostgresManager()),
            ],
        ),
        psqlextra.backend.migrations.operations.add_default_partition.PostgresAddDefaultPartition(
            model_name='HourCandle',
            name='default',
        ),
        psqlextra.backend.migrations.operations.create_partitioned_model.PostgresCreatePartitionedModel(
            name='ThirtyMinCandle',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('ticker', models.CharField(db_index=True, max_length=10)),
                ('timestamp', models.DateTimeField()),
                ('open', models.DecimalField(decimal_places=2, max_digits=8)),
                ('high', models.DecimalField(decimal_places=2, max_digits=8)),
                ('low', models.DecimalField(decimal_places=2, max_digits=8)),
                ('close', models.DecimalField(decimal_places=2, max_digits=8)),
                ('volume', models.BigIntegerField()),
            ],
            options={
                'verbose_name': '30-Minute Candle',
                'verbose_name_plural': '30-Minute Candles',
                'abstract': False,
            },
            partitioning_options={
                'method': psqlextra.types.PostgresPartitioningMethod['LIST'],
                'key': ['ticker'],
            },
            bases=(psqlextra.models.partitioned.PostgresPartitionedModel, stocks.models.CandleModelMixin),
            managers=[
                ('objects', psqlextra.manager.manager.PostgresManager()),
            ],
        ),
        psqlextra.backend.migrations.operations.add_default_partition.PostgresAddDefaultPartition(
            model_name='ThirtyMinCandle',
            name='default',
        ),
        migrations.CreateModel(
            name='Ticker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symbol', models.CharField(max_length=10, unique=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('sector', models.CharField(blank=True, max_length=100, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'indexes': [models.Index(fields=['is_active'], name='ticker_active')],
            },
        ),
        migrations.AddIndex(
            model_name='thirtymincandle',
            index=models.Index(fields=['ticker', 'timestamp'], name='thirtymincandle_t_ts'),
        ),
        migrations.AddConstraint(
            model_name='thirtymincandle',
            constraint=models.UniqueConstraint(fields=('ticker', 'timestamp'), name='thirtymincandle_uq_tt'),
        ),
        migrations.AddIndex(
            model_name='hourcandle',
            index=models.Index(fields=['ticker', 'timestamp'], name='hourcandle_t_ts'),
        ),
        migrations.AddConstraint(
            model_name='hourcandle',
            constraint=models.UniqueConstraint(fields=('ticker', 'timestamp'), name='hourcandle_uq_tt'),
        ),
        migrations.AddIndex(
            model_name='fivemincandle',
            index=models.Index(fields=['ticker', 'timestamp'], name='fivemincandle_t_ts'),
        ),
        migrations.AddConstraint(
            model_name='fivemincandle',
            constraint=models.UniqueConstraint(fields=('ticker', 'timestamp'), name='fivemincandle_uq_tt'),
        ),
        migrations.AddIndex(
            model_name='dailycandle',
            index=models.Index(fields=['ticker', 'timestamp'], name='dailycandle_t_ts'),
        ),
        migrations.AddConstraint(
            model_name='dailycandle',
            constraint=models.UniqueConstraint(fields=('ticker', 'timestamp'), name='dailycandle_uq_tt'),
        ),
    ]

services:
  django-app:
    build:
      context: ./app/django
      dockerfile: Dockerfile
    container_name: django_app
    env_file:
      - .env
    environment:
      - POSTGRES_DATABASE=${POSTGRES_DATABASE}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_ROOT_PASSWORD=${POSTGRES_ROOT_PASSWORD}
      - DB_HOST=postgres
      - APP_SECRET_KEY=${APP_SECRET_KEY}
      - DEBUG_MODE=${DEBUG_MODE}
    ports:
      - "${DJANGO_LOCAL_PORT}:8000"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  modeling-dev:
    image: python:3.11-slim
    container_name: modeling_dev
    volumes:
      - ./app/modeling:/app
      - ./.env:/app/.env
    working_dir: /app
    env_file:
      - .env
    # Don't automatically start with docker-compose up
    profiles: ["dev"]
    # Interactive mode for development
    stdin_open: true
    tty: true
    command: bash
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:17
    container_name: postgres_db
    env_file:
      - .env
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_ROOT_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DATABASE}
    ports:
      - "${POSTGRES_LOCAL_PORT}:5432"
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DATABASE}"]
      interval: 5s
      timeout: 5s
      retries: 10

volumes:
  postgres-data:
    driver: local